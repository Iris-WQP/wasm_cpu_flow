(module
  (start $main)
  (memory 1)
  (global $g0 (export "g0") (mut i32) (i32.const 69312))
  (global $g1 (export "g1") (mut i32) (i32.const 0))
 (global $g2  (export "g2") (mut i32) (i32.const 20))
  (global $gef (mut i32) (i32.const 20))
  (global $gf0 (mut i32) (i32.const 20))
  (global $gf1 (mut i32) (i32.const 20))
  (global $gf2 (mut i32) (i32.const 20))
  (global $gf3 (mut i32) (i32.const 20))
  (global $gf4 (mut i32) (i32.const 20))
  (global $gf5 (mut i32) (i32.const 20))
  (global $gf6 (mut i32) (i32.const 20))
  (global $gf7 (mut i32) (i32.const 20))
  (global $gf8 (mut i32) (i32.const 20))
  (global $gf9 (mut i32) (i32.const 20))
  (global $gfa (mut i32) (i32.const 20))
  (global $gfb (mut i32) (i32.const 20))
  (global $gfd (mut i32) (i32.const 20))
  (global $gfe (mut i32) (i32.const 20))
  (global $gff (mut i32) (i32.const 20))
  (global $g00 (mut i32) (i32.const 20))
  (global $g01 (mut i32) (i32.const 20))
  (global $g02 (mut i32) (i32.const 20))
  (global $g03 (mut i32) (i32.const 20))
  (global $g04 (mut i32) (i32.const 20))
  (global $g05 (mut i32) (i32.const 20))
  (global $g06 (mut i32) (i32.const 20))
  (global $g07 (mut i32) (i32.const 20))
  (global $g08 (mut i32) (i32.const 20))
  (global $g09 (mut i32) (i32.const 20))
  (global $g0a (mut i32) (i32.const 20))
  (global $g0b (mut i32) (i32.const 20))
  (global $g0c (mut i32) (i32.const 20))
  (global $g0d (mut i32) (i32.const 20))
  (global $g0e (mut i32) (i32.const 20))
  (global $g0f (mut i32) (i32.const 20))
  (global $g10 (mut i32) (i32.const 20))
  (global $g11 (mut i32) (i32.const 20))
  (global $g12 (mut i32) (i32.const 20))
  (global $g13 (mut i32) (i32.const 20))
  (global $g14 (mut i32) (i32.const 20))
  (global $g16 (mut i32) (i32.const 20))
  (global $g17 (mut i32) (i32.const 20))
  (global $g18 (mut i32) (i32.const 20))
  (global $g19 (mut i32) (i32.const 20))
  (global $g1a (mut i32) (i32.const 20))
  (global $g1b (mut i32) (i32.const 20))
  (global $g1c (mut i32) (i32.const 20))
  (global $g1d (mut i32) (i32.const 20))
  (global $g1e (mut i32) (i32.const 20))
  (global $g1f (mut i32) (i32.const 20))
  (global $g20 (mut i32) (i32.const 20))
  (global $g21 (mut i32) (i32.const 20))
  (global $g22 (mut i32) (i32.const 20))
  (global $g23 (mut i32) (i32.const 20))
  (global $g24 (mut i32) (i32.const 20))
  (global $g25 (mut i32) (i32.const 20))
  (global $g26 (mut i32) (i32.const 20))
  (global $g27 (mut i32) (i32.const 20))
  (global $g28 (mut i32) (i32.const 20))
  (global $g29 (mut i32) (i32.const 20))
  (global $g2a (mut i32) (i32.const 20))
  (global $g2b (mut i32) (i32.const 20))
  (global $g2c (mut i32) (i32.const 20))
  (global $g2d (mut i32) (i32.const 20))
  (global $g39 (mut i32) (i32.const 20))
  (global $g3a (mut i32) (i32.const 20))
  (global $g3b (mut i32) (i32.const 20))
  (global $g3c (mut i32) (i32.const 20))
  (global $g3d (mut i32) (i32.const 20))

  (func $main
    (global.get $g3d) (i32.const 0)
    (i32.const 87) (i32.const 65)
    (i32.const 0) (i32.const 6) (i32.store)
    (call $calc) 
    (global.set $g0) (global.set $g1)
  )
  (func $calc (param $op i32)(param $a i32)(param $b i32)(result i32)
    (local $c i32) (i32.const 0)(i32.load offset=128)(local.set $c)
	(if (result i32)
    	(i32.eqz (local.get $op)) 
        (then (local.get $a)(global.get $g2)
           (if(param i32)(param i32)(result i32)(i32.eqz (global.get $g1))
		    (then (i32.rotl)(local.get $b)(i32.div_s))
            (else (i32.rotl)(local.get $b)(i32.rem_s)) 
           )
        )
      	(else (local.get $b) (local.get $c)(i32.shl) 
          (local.get $c)(i32.add))
    )  
  )
)